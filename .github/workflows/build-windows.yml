name: Build Windows Executable

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
    
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pyinstaller
        cd backend
        pip install -r requirements.txt
        cd ..
    
    - name: Build React frontend
      run: |
        cd frontend
        npm install --legacy-peer-deps
        npm run build
        cd ..
    
    - name: Install NSIS
      run: |
        choco install nsis -y
    
    - name: Build Python backend executable
      run: |
        pyinstaller build_windows.spec
    
    - name: Build NSIS installer
      run: |
        & "C:\Program Files (x86)\NSIS\makensis.exe" installer.nsi
    
    - name: Upload artifact
      uses: actions/upload-artifact@v3
      with:
        name: Abeka-Junction-Traffic-Dashboard-Setup
        path: Abeka-Junction-Traffic-Dashboard-Setup.exe
        retention-days: 30
    
    - name: Create Release
      if: startsWith(github.ref, 'refs/tags/')
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        body: |
          # Abeka Junction Traffic Dashboard - Release
          
          Download the installer: `Abeka-Junction-Traffic-Dashboard-Setup.exe`
          
          ## Installation
          1. Download the .exe file
          2. Run it
          3. Click Next â†’ Install
          4. Launch from desktop shortcut
          
          ## Features
          - Real-time traffic congestion prediction
          - RFID sensor integration
          - SQLite database
          - CSV data export
          - Beautiful web dashboard
        draft: false
        prerelease: false
    
    - name: Upload Release Asset
      if: startsWith(github.ref, 'refs/tags/')
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./Abeka-Junction-Traffic-Dashboard-Setup.exe
        asset_name: Abeka-Junction-Traffic-Dashboard-Setup.exe
        asset_content_type: application/octet-stream
